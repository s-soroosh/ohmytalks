export default [
  {
    "slug": "javascript1",
    "title": "Javascript Bootcamp - Part 1",
    "summary": "",
    "description": `
    <div>
    <p>
جلسه اول:
</p>
<p>
در این جلسه صحبت می‌کنیم که چرا به این زبان نیاز داریم و در چه جاهایی استفاده می‌کنیم.
</p>
<p>
در مورد ویژگی‌های کلی زبان. می‌گیم کجا و چطور می‌تونیم دستورات زبان رو وارد کنیم و خروجی رو مشاهده کنیم.
</p>
<p>
قدم‌های ابتدایی استفاده از کنسول در براوزر و دولوپرز تولز developers tools رو بر می‌داریم.
</p>
<p>
به این سوال جواب می‌دیم که چرا سمی‌کالن «;» رو بعضی افراد می‌نویسن و برخی نه.
</p>
<p>
متغیرها رو بررسی می‌کنیم که چه تایپ‌هایی دارند و چطور می‌تونیم دیتا رو نگهداری کنیم و در قسمت‌های مختلف برنامه استفاده کنیم.
</p>
<p>
در مورد تفاوت undefined و null توضیح می‌دیم و با مثال متوجه می‌شیم که چطور تایپ symbol ساخته و استفاده می‌شه.
</p>
<p>
در مورد flow control  در javascript حرف می‌زنیم. در نهایت برای یاد گرفتن یه سوال حل می‌کنیم. سوال اول سایت اویلر.
</p>
<p>
یاد می‌گیریم چطور این مسئله رو با کمک فانکشن ها تبدیل به قسمت های کوچیک تر بکنیم. برای بهتر یاد گرفتن این مطلب حل مسئله اویلر رو داخل یک فانکشن می‌گذاریم.
</p>
    </div>
    `,
    "link": "https://www.youtube.com/embed/Pf4tdS9Sm6s",
    "keywords": ["setup", "ide", "key3", "data type"],
    "image": "/images/js.png"
  },
  {
    "slug": "javascript2",
    "title": "Javascript Bootcamp - Part 2",
    "summary": "",
    "description": `
    <div>
    <p>
جلسه دوم:
</p>
<p>
این جلسه در مورد تعریف آبجکت ها حرف می‌زنیم و اینکه چه کاربردی دارند یا دلیل وجودیشون چیه.
</p>
<p>
چند تا مثال می‌زنیم که چطور دیتا رو داخل یک آبجکت قرار بدیم و یا استخراج کنیم. تفاوت متد و فانکشن رو می‌گیم و متد می‌نویسیم.
</p>
<p>
 با کلیدواژه this شنا می‌شیم. می‌بینیم که بلاک چه امکاناتی به ما می‌دن و چرا مهم هستند.
</p>
<p>
 می‌بینیم چطور ثابت یا const تعریف می‌کنیم و تفاوتش رو با متغیر ها می‌گیم.
</p>
<p>
تفاوت کلمات let و var رو بررسی می‌کنیم. تایپ رو پیدا می‌کنیم با کلیدواژه typeof 
</p>
<p>
در مورد کالکشن ها در جاوااسکریپت حرف می‌زنیم و با چند تا مثال کامل بررسی می‌کنیم که چطور ازشون استفاده کنیم یا چه متدهایی موجود دارند.
</p>
<p>
تفاوت Array / Set و Object رو می بینیم.
چند تا مرجع هم برای مطالعه بیشتر متدها معرفی می‌کنیم.
</p>
    </div>
    `,
    "link": "https://www.youtube.com/embed/huaWgAbdQRI",
    "keywords": ["this", "type of", "const", "let", "var", "collection"],
    "image": "/images/js.png"
  },
  {
    "slug": "javascript3",
    "title": "Javascript Bootcamp - Part 3",
    "summary": "",
    "description": `
    <div>
    جلسه سوم:
<p>
جلسات قبلی رو مرور می‌کنیم در مورد آبجکت و فانکشن و انواع حالات مختلف نوشتن فانکشن ها رو ریز به ریز بررسی می‌کنیم.
</p>
<p>
می‌بینیم چطور یه فانکشن رو می‌تونیم پاس بدیم. برای آبجکت یه تعداد متد می‌نویسیم که بتونیم از اطلاعات آبجکت استفاده کنیم.
</p>
<p>
بیشتر با استفاده this آشنا می‌شیم. سوالات در مورد پرایوت یا پابلیک کردن فیلدها رو جواب می‌دیم تا واضح تر بشه.
</p>
<p>
یه سبد خرید می‌سازیم. و به شکل عملی می‌بینیم چطور می‌تونیم چیزایی که یاد گرفتیم رو روش پیاده کنیم. یعنی با متدها بهش خرید اضافه یا کم کنیم.
</p>
<p>
قیمت کلی تغییر کنه و یک متد هم برای اعمال تخفیف می‌نویسیم.
</p>
<p>
همزمان استفاده از متدها رو هم تمرین می‌کنیم و در مورد شیوه پیاده سازی این متدها در مموری و دسترسی به آبجکت ها صحبت می‌کنیم.
</p>
<p>
بررسی می‌کنیم کانستراکتر رو چطور می‌شه نوشت و چطور می‌شه استفاده کرد.
</p>
    </div>
    `,
    "link": "https://www.youtube.com/embed/huaWgAbdQRI",
    "keywords": ["this", "object", "method", "OOP in JS"],
    "image": "/images/js.png"
  },
  {
    "slug": "javascript4",
    "title": "Javascript Bootcamp - Part 4",
    "summary": "",
    "description": `
    <div>
    <p>
جلسه چهارم:
</p>
<p>
این قسمت در مورد گذشته فنی جاوااسکریپت حرف می‌زنیم.
</p>
<p>
چرا یک رشته در حال اجرا داره و چطور می‌تونیم اتفاقات مختلف رو همزمان مدیریت کنیم یا به عبارتی برنامه نویسی غیرهمگام asynchronous رو مرور می‌کنیم.
</p>
<p>
به این سوال جواب می‌دیم که در برنامه‌های بزرگ چطور می‌شه با این مسئله کنار اومد. کال بک ها رو توضیح می‌دیم.
</p>
<p>
یک متد برای تخفیف روی سبد خریدمون می‌نویسیم و حالات مختلفش رو امتحان می‌کنیم. مشکلاتشون رو بررسی می‌کنیم.
</p>
<p>
چند تا مثال از callback hell می‌بینیم.
</p>
<p>
در مورد Promise حرف می‌زنیم که چطور ساخته و استفاده می‌شه. پکیج های مربوط رو نصب می‌کنیم و از پکیج‌منیجر ها استفاده می‌کنیم.
</p>
<p>
یک api رو صدا می‌کنیم با کمک fetch و پاسخ رو به شکل json می‌گیریم و عملیات های مربوطه برای استخراج اطلاعات رو انجام می‌دیم.

یک ارور رو هندل می‌کنیم و یاد می‌گیریم به شکل عمومی ارورها رو به چه شکلی هندل کنیم.
</p>
<p>
در نهایت promise خودمون رو می‌نویسیم.
</p>

    </div>
    `,
    "link": "https://www.youtube.com/embed/huaWgAbdQRI",
    "keywords": ["callback hell", "json", "fetch", "callback", "Promise"],
    "image": "/images/js.png"
  },
  {
    "slug": "javascript5",
    "title": "Javascript Bootcamp - Part 5",
    "summary": "",
    "description": `
    <div>
    <p>
جلسه پنجم
</p>
<p>
در مورد فانکشنال پروگرمینگ در جاواسکریپت صحبت می‌کنیم. تفاوت هر کدوم رو ریز به ریز بررسی می‌کنیم که چه تفاوتی با همدیگه دارند.
</p>
<p>
بررسی می‌کنیم که کالکشن ها در جاوااسکریپت چه امکانات فانکشنالی در اختیار ما قرار می‌دن.
</p>
<p>
آرایه ها و استفاده reduce رو می‌بینیم. که مروری بر callback هم داریم.
</p>
<p>
حالات مرزی این تابع رو بررسی می‌کنیم که چه مشکلاتی ممکنه موقع استفاده برامون پیش بیاد.
</p>
<p>
فیلتر رو هم استفاده می‌کنیم تا روی خروجی توابع قبلی یک فیلتر اعمال کنیم.
</p>
<p>
با map آشنا می‌شیم و به همه توابع قبلی اضافه می‌کنیم. 
</p>
<p>
مقایسه می‌کنیم که آیا کارهایی که تا الان انجام دادیم رو با forEach جایگزین کنیم یا نه
</p>
<p>
دوباره به Promise بر می‌گردیم و می‌بینیم چطور با برنامه‌نویسی فانکشنال که نوشتیم می‌تونیم ترکیبش کنیم و ترتیب خروجی‌ها چطور کنترل می‌شن.
</p>
<p>
در مورد async و wait یاد می‌گیریم و شیوه استفاده که کار ما رو راحت می‌کنه.
</p>
    </div>
    `,
    "link": "https://www.youtube.com/embed/huaWgAbdQRI",
    "keywords": ["promise", "async", "await", "asynchronous programming"],
    "image": "/images/js.png"
  },
  {
    "slug": "svelte1",
    "title": "Svelte Bootcamp - Part 1\n",
    "summary": "",
    "description": `
    <p>
      Sevelte یک وب فریمورک بسیار ساده و جذاب است که به شما امکان ساخت وب سایت و یا وب اپلیکشن مورد نظرتون رو با کمترین میزان لازم کد می‌دهد.
      این فریمورک نسبت به رقبای خود سرعت بهتری دارد و یادگیری و کار با آن بسیار ساده و شیرین است.
      
      </p>
      <p>  
      در این قسمت از آموزش فریمورک Svelete شما یاد خواهید گرفت که چطور محیط برنامه‌نویسی را اماده کنید و همینطور با بخشی از امکانات ابتدایی این فریمورک آشنا خواهید شد.
    </p>
    `,
    "link": "https://www.youtube.com/embed/57scZ70ehuM",
    "keywords": ["web framework", "sevelte", "SPA"],
    "image": "/images/svelte.png"
  }
]

